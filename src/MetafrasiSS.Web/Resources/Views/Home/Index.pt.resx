<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about" xml:space="preserve">
    <value>Sobre</value>
  </data>
  <data name="aProgrammingTranslator" xml:space="preserve">
    <value>Um Tradutor De Programação</value>
  </data>
  <data name="aProgrammingTranslatorText" xml:space="preserve">
    <value>Metafrasi é uma ferramenta que ajuda os desenvolvedores a traduzir código entre diferentes linguagens de programação.
Ela suporta linguagens como Python, JavaScript, C# e C.
Essa ferramenta pode ser um recurso valioso tanto para estudantes de tecnologia quanto para desenvolvedores experientes.
Permite que os estudantes entendam o código e auxilia desenvolvedores mais experientes que desejam estudar ou migrar a linguagem principal de um projeto.</value>
  </data>
  <data name="codeTranslation" xml:space="preserve">
    <value>Tradução De Código!</value>
  </data>
  <data name="codeTranslationText" xml:space="preserve">
    <value>Metafrasi é capaz de traduzir código para várias linguagens de programação.
Por exemplo, você pode usá-la para converter print("Hello World") para console.log("Hello World").</value>
  </data>
  <data name="hello" xml:space="preserve">
    <value>Olá, sou eu</value>
  </data>
  <data name="ima" xml:space="preserve">
    <value>E eu sou uma</value>
  </data>
  <data name="languages" xml:space="preserve">
    <value>Linguagens Suportadas</value>
  </data>
  <data name="learnMore" xml:space="preserve">
    <value>Saber Mais</value>
  </data>
  <data name="moreAbout" xml:space="preserve">
    <value>Mais sobre Cynd</value>
  </data>
  <data name="moreAboutUs" xml:space="preserve">
    <value>Mais Sobre Nós</value>
  </data>
  <data name="our" xml:space="preserve">
    <value>Nossos</value>
  </data>
  <data name="ourSupported" xml:space="preserve">
    <value>Nossas</value>
  </data>
  <data name="ourSupportedLanguagesText" xml:space="preserve">
    <value>Estas são as linguagens que suportamos, e o percentual representa o caminho para uma tradução básica completa.</value>
  </data>
  <data name="personalSpace" xml:space="preserve">
    <value>Espaço Pessoal</value>
  </data>
  <data name="personalSpaceText" xml:space="preserve">
    <value>Com o Metafrasi, você tem a liberdade de desenvolver seus projetos, mantê-los seguros e compartilhá-los com outros colaboradores.</value>
  </data>
  <data name="pleasure" xml:space="preserve">
    <value>É um prazer conhecê-lo</value>
  </data>
  <data name="services" xml:space="preserve">
    <value>Serviços</value>
  </data>
  <data name="siteState" xml:space="preserve">
    <value>- o estado de site -</value>
  </data>
  <data name="us" xml:space="preserve">
    <value>Nós</value>
  </data>
  <data name="wholesomeSupport" xml:space="preserve">
    <value>Suporte Aconchegante</value>
  </data>
  <data name="wholesomeSupportText" xml:space="preserve">
    <value>O Metafrasi tem uma equipe de suporte sempre disponível para ajudar, junto com uma caixa de feedback e sugestões de melhorias.</value>
  </data>
</root>